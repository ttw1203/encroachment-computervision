# Enhanced .env configuration file with TTC processing parameters
# Optimized for heterogeneous urban traffic (e.g., Dhaka, Bangladesh)

# ============================================
# VIDEO AND MODEL CONFIGURATION
# ============================================

# Video paths
VIDEO_PATH=/kaggle/input/thesis_data_200051149/video_mirpur_cam1.mp4
OUTPUT_PATH=/kaggle/working/results_mirpur/mirpurCam1_output.mp4
ZONE_CHECK_PNG=/kaggle/working/results_mirpur/zone_check.png

# Model configuration
MODEL_WEIGHTS=D:\thesisVideo\weights\weights_analysis\v16_yolo11m\weights\v16_best.pt
DEVICE=cuda:0
DISPLAY=True

# Zone configuration
ENC_ZONE_CONFIG=zones-mirpur.yaml

# Output directory
RESULTS_OUTPUT_DIR=/kaggle/working/results_mirpur/csv

# ============================================
# SPEED CALIBRATION CONFIGURATION (unit= m/s)
# ============================================

# Option 1: Linear Model (default)
# y = A * x + B
# SPEED_CALIBRATION_MODEL_TYPE=linear
 SPEED_CALIBRATION_MODEL_A=1.0
 SPEED_CALIBRATION_MODEL_B=0

# Option 2: 2nd Degree Polynomial
# y = a0 + a1*x + a2*x^2
# SPEED_CALIBRATION_MODEL_TYPE=poly2
# SPEED_CALIBRATION_POLY_COEFFS=0.05,1.02,0.001

# Option 3: 3rd Degree Polynomial
#y = a0 + a1*x + a2*x^2 + a3*x^3
#y = -0.9962 + 1.6068x + -0.0940x² + 0.0031x³
#SPEED_CALIBRATION_MODEL_TYPE=poly3
#SPEED_CALIBRATION_POLY_COEFFS=-0.9962,1.6068,-0.0940,0.0031

# Option 4: RANSAC-fitted Linear Model
# y = A * x + B (same as linear but coefficients from RANSAC fitting)
# y = 0.8322x + 0.6777 (for inliers)
# SPEED_CALIBRATION_MODEL_TYPE=ransac_linear
# SPEED_CALIBRATION_MODEL_A=0.8322
# SPEED_CALIBRATION_MODEL_B=0.6777

# ============================================
# SPEED STABILIZATION CONFIGURATION
# ============================================

# Number of frames to use for speed smoothing (higher = smoother)
SPEED_SMOOTHING_WINDOW=0 # sv.DetectionsSmoothen is being used

# Maximum allowed acceleration in m/s² (prevents unrealistic speed jumps)
MAX_ACCELERATION=5.0

# Minimum speed threshold in m/s (speeds below this are set to 0)
MIN_SPEED_THRESHOLD=0.01

# ============================================
# ENHANCED TTC PROCESSING CONFIGURATION
# ============================================

# Hysteresis Logic - Prevents rapid toggling of TTC alerts
# Lower thresholds activate TTC monitoring, higher thresholds deactivate
TTC_THRESHOLD_ON=1 # seconds - TTC threshold to START monitoring
TTC_THRESHOLD_OFF=1.5 # seconds - TTC threshold to STOP monitoring
COLLISION_DISTANCE_ON=1.5 # meters - Distance threshold to START monitoring
COLLISION_DISTANCE_OFF=2.5 # meters - Distance threshold to STOP monitoring

# Persistence Filtering - Require sustained conditions before logging
# TTC conditions must remain active for this many consecutive frames
TTC_PERSISTENCE_FRAMES=5 # frames (3 frames ≈ 0.1s at 30fps)

# Confidence-Based Filtering - Skip low-quality detections
# Both vehicles must have detection confidence above this threshold
MIN_CONFIDENCE_FOR_TTC=0.4 # range: 0.0-1.0 (0.4 = 40% confidence)

# Relative Angle Filtering - Validate approach angles
# Only trigger TTC for vehicles approaching within these angle ranges
TTC_MIN_RELATIVE_ANGLE=10 # degrees - minimum relative approach angle
TTC_MAX_RELATIVE_ANGLE=150 # degrees - maximum relative approach angle
# Note: Angles outside 10°-150° often represent parallel or diverging motion

# System Management
TTC_CLEANUP_TIMEOUT_FRAMES=10 # frames - remove inactive tracker pairs after this timeout
ENABLE_TTC_DEBUG=True # Enable debug output and performance metrics

# ============================================
# VEHICLE DIMENSIONS FOR COLLISION DETECTION
# ============================================

# Option 1: Define dimensions inline (JSON format)
# VEHICLE_DIMENSIONS_JSON={"car":{"length":4.5,"width":1.8},"truck":{"length":8.0,"width":2.5},"bus":{"length":12.0,"width":2.5},"motorcycle":{"length":2.0,"width":0.8},"bicycle":{"length":1.8,"width":0.6},"person":{"length":0.6,"width":0.4},"rickshaw":{"length":3.0,"width":1.2},"cng":{"length":3.5,"width":1.5},"default":{"length":4.0,"width":1.8}}

# Option 2: Define dimensions in separate file (recommended for readability)
VEHICLE_DIMENSIONS_FILE=vehicle_dimensions.json

# If neither option is set, system uses built-in defaults optimized for Dhaka traffic

# ============================================
# RF-DETR CONFIGURATION (Optional)
# ============================================

RF_DETR_MODEL_PATH=/kaggle/input/v22-from-v21-rf-detr-map50_57/pytorch/rf-detr-v22/1/checkpoint_best_ema.pth
RF_DETR_MODEL_TYPE=custom # 'custom' for fine-tuned models, 'coco' for pre-trained
RF_DETR_CUSTOM_CLASSES_PATH=custom_classes.json
RF_DETR_RESOLUTION=560 # Must be divisible by 56
RF_DETR_VARIANT=base # 'base' (29M params) or 'large' (128M params)

# ============================================
# SAHI CONFIGURATION (Optional)
# ============================================

ENABLE_SAHI=false
SAHI_SLICE_HEIGHT=512
SAHI_SLICE_WIDTH=512
SAHI_OVERLAP_HEIGHT_RATIO=0.2
SAHI_OVERLAP_WIDTH_RATIO=0.2
SAHI_POSTPROCESS_TYPE=NMS
SAHI_POSTPROCESS_MATCH_THRESHOLD=0.5
SAHI_POSTPROCESS_CLASS_AGNOSTIC=false

# ============================================
# ADVANCED VEHICLE COUNTING (Optional)
# ============================================

ENABLE_ADVANCED_VEHICLE_COUNTING=false

# ============================================
# CONFIGURATION NOTES FOR URBAN TRAFFIC
# ============================================

# For dense urban traffic like Dhaka:
# - Lower TTC_THRESHOLD_ON (1.5s) catches more potential conflicts
# - Higher persistence (3 frames) reduces false positives from detection noise
# - Lower confidence threshold (0.4) accommodates partially occluded vehicles
# - Wide angle range (10°-150°) captures various approach scenarios
# - Smaller vehicle dimensions for motorcycles/rickshaws are critical

# Performance tuning:
# - Increase TTC_PERSISTENCE_FRAMES to reduce false positives
# - Decrease MIN_CONFIDENCE_FOR_TTC to catch more marginal detections
# - Adjust angle ranges based on typical intersection geometry
# - Set ENABLE_TTC_DEBUG=true for optimization insights

# Memory management:
# - TTC_CLEANUP_TIMEOUT_FRAMES=90 balances memory usage vs tracking continuity
# - Larger values use more memory but maintain longer tracking history